/****************************************************************************
 **
 ** File Name: adm_test_adm_impl.c
 **
 ** Description: TODO
 **
 ** Notes: TODO
 **
 ** Assumptions: TODO
 **
 ** Modification History:
 **  YYYY-MM-DD  AUTHOR           DESCRIPTION
 **  ----------  --------------   --------------------------------------------
 **  {{datestamp}}  AUTO             Auto-generated c file
 **
 ****************************************************************************/

/*   START CUSTOM INCLUDES HERE  */
/*             TODO              */
/*   STOP CUSTOM INCLUDES HERE  */


#include "refda/register.h"
#include "refda/valprod.h"
#include "cace/ari.h"
#include "cace/util/defs.h"
#include "cace/util/logging.h"

/*   START CUSTOM FUNCTIONS HERE */
/*             TODO              */
/*   STOP CUSTOM FUNCTIONS HERE  */

void test_adm_setup()
{

	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION setup BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION setup BODY
	 * +-------------------------------------------------------------------------+
	 */
}

void test_adm_cleanup()
{

	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION cleanup BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION cleanup BODY
	 * +-------------------------------------------------------------------------+
	 */
}


/* Collect Functions */
/*
 * Example UVAST EDD.
 */
void test_adm_get_edd__uvast(const refda_amm_edd_desc_t *obj _U_, refda_valprod_ctx_t *ctx)
{
	char *edd_val_ari;
	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION get_edd__uvast BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION get_edd__uvast BODY
	 * +-------------------------------------------------------------------------+
	 */
	ari_set_tstr(&(ctx->value), edd_val_ari, false);
}


/*
 * Example UVAST EDD with parameters.
 */
void test_adm_get_edd__uvast__param(const refda_amm_edd_desc_t *obj _U_, refda_valprod_ctx_t *ctx)
{
	char *edd_val_ari;
	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION get_edd__uvast__param BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION get_edd__uvast__param BODY
	 * +-------------------------------------------------------------------------+
	 */
	ari_set_tstr(&(ctx->value), edd_val_ari, false);
}


/*
 * Example TP EDD: current system time.
 */
void test_adm_get_edd__tp(const refda_amm_edd_desc_t *obj _U_, refda_valprod_ctx_t *ctx)
{
	char *edd_val_ari;
	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION get_edd__tp BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION get_edd__tp BODY
	 * +-------------------------------------------------------------------------+
	 */
	ari_set_tstr(&(ctx->value), edd_val_ari, false);
}


/*
 * Is the given endpoint active? (0=no)
 */
void test_adm_get_endpoint__active(const refda_amm_edd_desc_t *obj _U_, refda_valprod_ctx_t *ctx)
{
	char *edd_val_ari;
	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION get_endpoint__active BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION get_endpoint__active BODY
	 * +-------------------------------------------------------------------------+
	 */
	ari_set_tstr(&(ctx->value), edd_val_ari, false);
}



/* Control Functions */

/*
 * Get a single MIB value from the agent.
 */
int test_adm_ctrl_get(const refda_amm_ctrl_desc_t *obj _U_, refda_exec_ctx_t *ctx)
{
	int status;
	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION ctrl_get BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION ctrl_get BODY
	 * +-------------------------------------------------------------------------+
	 */
	return status;
}


/*
 * Set a single MIB value in the agent.
 */
int test_adm_ctrl_set(const refda_amm_ctrl_desc_t *obj _U_, refda_exec_ctx_t *ctx)
{
	int status;
	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION ctrl_set BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION ctrl_set BODY
	 * +-------------------------------------------------------------------------+
	 */
	return status;
}



/* OP Functions */

/*
 * Add two numeric values.
 *  *The operands are cast to the least compatible numeric type
 *  *before the arithmetic.
 */
void test_adm_op_add()
{
	int *result = NULL;
	/*
	 * +-------------------------------------------------------------------------+
	 * |START CUSTOM FUNCTION op_add BODY
	 * +-------------------------------------------------------------------------+
	 */
	/*
	 * +-------------------------------------------------------------------------+
	 * |STOP CUSTOM FUNCTION op_add BODY
	 * +-------------------------------------------------------------------------+
	 */
	return result;
}

