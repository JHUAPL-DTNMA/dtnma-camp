{%- macro gen_params(obj) -%}
{%- set d = dict() -%}
{%- set count = 0 -%}
{%- set params  = [] -%}
{%- for param in obj.parameters.items -%}
{%- set count = count + 1  -%}
{%- set params = params.append( param.typeobj.type_text~"."~param.name) -%}
{% endfor %}
CALL SP__insert_formal_parmspec( {{obj.parameters.items|length}}, 'formal parameters for {{obj.name | sql_name}}', '{{params|join(', ')}}',fp_spec_id);
{%- endmacro %}
{%- macro gen_metadata(enum, obj) %}
{%- set status = 'null' %}
{%- if obj.status %}
{%- set status = "'"~obj.status~"'" %}
{%- endif %}
{%- set reference = 'null' %}
{%- if obj.reference %}
{%- set reference = "'"~obj.reference~"'" %}
{%- endif %}
{%- set description = 'null' %}
{%- if obj.description | replace('\n', '') %}
{%- set description = "'"~obj.description | replace('\n', '')~"'" %}
{%- endif %}
CALL SP__insert_obj_metadata({{enum}}, '{{obj.name | sql_name}}', r_data_model_id, {{obj.enum}}, {{status}}, {{reference}}, {{description}}, {{obj.name | sql_name}}_oid);
{%- endmacro %}

{%- macro gen_obj_variables(part) %}
{%- for obj in part%}
{{obj.name | sql_name }}_oid INTEGER;
{{obj.name | sql_name }}_fid INTEGER;
{{obj.name | sql_name }}_aid INTEGER;
{%- endfor %}
{%- endmacro %}
-- -------------------------------------------------------------------
--
-- File Name: {{adm.name}}.sql
--
-- Description: auto generated postgressql for {{adm.name}} 
--
-- Notes: TODO
--
-- Assumptions: TODO
--
-- Modification History:
-- YYYY-MM-DD    AUTHOR          DESCRIPTION
-- ----------    --------------  ------------------------------------
--     AUTO            Auto-generated SQL file
--
-- ------------------------------------------------------------------

DO
$do$
DECLARE
ap_spec_id INTEGER;
fp_spec_id INTEGER;
r_data_model_id INTEGER;

{%- if adm.ident %}
{{gen_obj_variables(adm.ident)}}
{%- endif %}

{%- if adm.const %}
{{gen_obj_variables(adm.const)}}
{%- endif %}

{%- if adm.ctrl %}
{{gen_obj_variables(adm.ctrl)}}
{%- endif %}

{%- if adm.edd %}
{{gen_obj_variables(adm.edd)}}
{%- endif %}

{%- if adm.oper %}
{{gen_obj_variables(adm.oper)}}
{%- endif %}

{%- if adm.sbr %}
{{gen_obj_variables(adm.sbr)}}
{%- endif %}

{%- if adm.tbr %}
{{gen_obj_variables(adm.tbr)}}
{%- endif %}

{%- if adm.var %}
{{gen_obj_variables(adm.var)}}
{%- endif %}

{%- if adm.typedef %}
{{gen_obj_variables(adm.typedef)}}
{%- endif %}
BEGIN

{%- set null_string = 'null' %}
--namespace 
CALL SP__insert_data_model('ADM', '{{adm.name}}', {{adm.enum if adm.enum else -1}}, {{"'"~adm.revision~"'" if adm.revision else null_string}} , {{"'"~adm.description~"'" if adm.description else null_string}}, r_data_model_id);

{%- if adm.ident %}
{%- for obj in adm.ident %}
{{gen_metadata(-1, obj)}}
{%- if obj.parameters.items|length > 0 %}
{{ gen_params(obj) }}
CALL SP__insert_ident_formal_definition({{obj.name | sql_name}}_oid, '{{obj.description | replace('\n', '')}}', fp_spec_id, {{obj.name | sql_name}}_fid);
{%- else %}
CALL SP__insert_ident_formal_definition({{obj.name | sql_name}}_oid, '{{obj.description | replace('\n', '')}}', NULL, {{obj.name | sql_name}}_fid);
CALL SP__insert_ident_actual_definition({{obj.name | sql_name}}_oid, 'The singleton value for {{obj.name | sql_name}}', NULL, {{obj.name | sql_name}}_aid);
{%- endif %}

{%- endfor %}
{%- endif %}

{%- if adm.const %}

-- const
{%- for obj in adm.const %}
{{gen_metadata(-2, obj)}}
CALL SP__insert_const_actual_definition({{obj.name | sql_name}}_oid, '{{obj.description | replace('\n', '')}}', '{{obj.init_ari.type_id}}', '{{obj.init_value}}', {{obj.name | sql_name}}_aid);
{%- endfor %}

{%- endif %}
{%- if adm.ctrl %}

-- ctrl
{%- for obj in adm.ctrl %}
{{gen_metadata(-3, obj)}}
{% set result = "" %}
{%- if obj.result is defined %}
{% set result = obj.result.typeobj.type_text ~ "." ~obj.result.name %}
{%- endif %}
{%- if obj.parameters.items|length > 0 %}
{{ gen_params(obj)}}
CALL SP__insert_control_formal_definition({{obj.name | sql_name}}_oid, '{{obj.description | replace('\n', '')}}', fp_spec_id, '{{result}}', {{obj.name | sql_name}}_fid);
{%- else %}
CALL SP__insert_control_formal_definition({{obj.name | sql_name}}_oid, '{{obj.description | replace('\n', '')}}', NULL, '{{result}}', {{obj.name | sql_name}}_fid);
CALL SP__insert_control_actual_definition({{obj.name | sql_name}}_oid, 'The singleton value for {{obj.name | sql_name}}', NULL, {{obj.name | sql_name}}_aid);
{%- endif %}

{%- endfor %}
{%- endif %}

{%- if adm.edd %}

-- edd 
{%- for obj in adm.edd %}
{{gen_metadata(-4, obj)}}
{%- if obj.parameters.items|length > 0 %}
{{ gen_params(obj) }}
CALL SP__insert_edd_formal_definition({{obj.name | sql_name}}_oid, '{{obj.description | replace('\n', '')}}', fp_spec_id, '{{obj.typeobj.type_text}}', {{obj.name | sql_name}}_fid);
{%- else %}
CALL SP__insert_edd_formal_definition({{obj.name | sql_name}}_oid, '{{obj.description | replace('\n', '')}}', null, '{{obj.typeobj.type_text}}', {{obj.name | sql_name}}_fid);
CALL SP__insert_edd_actual_definition({{obj.name | sql_name}}_oid, 'The singleton value for {{obj.name | sql_name}}', null, {{obj.name | sql_name}}_aid);
{%- endif %}

{%- endfor %}
{%- endif %}

{%- if adm.oper %}

-- oper 
{%- for obj in adm.oper %}
{{gen_metadata(-6, obj)}}
{% set opers = [] %}
{% set num_operands = 0 %}
{%- if obj.operands %}
{%- for operand in obj.operands.items %}
{%- set opers = opers.append( operand.type~"."~operand.name ) -%}
{%- endfor %}
{%- set num_operands = obj.operands.items|length  -%}
{%- endif %}
{%- if obj.parameters.items|length > 0 %}
{{ gen_params(obj) }}
CALL SP__insert_operator_formal_definition({{obj.name | sql_name}}_oid, '{{obj.description | replace('\n', '')}}', fp_spec_id, {{num_operands}},  '{{opers|join(', ')}}', '{{obj.result.name}}', '{{obj.result.default_ari}}', {{obj.name | sql_name}}_fid);
{%- else %}
CALL SP__insert_operator_formal_definition({{obj.name | sql_name}}_oid, '{{obj.description | replace('\n', '')}}', null, {{num_operands}}, '{{opers|join(', ')}}', '{{obj.result.name}}', '{{obj.result.default_ari}}', {{obj.name | sql_name}}_fid);
CALL SP__insert_operator_actual_definition({{obj.name | sql_name}}_oid, 'The singleton value for {{obj.name | sql_name}}', null, {{obj.name | sql_name}}_aid);
{%- endif %}
{%- endfor %}

{%- endif %}

{#
{%- if adm.sbr %}
{%- for obj in adm.sbr %}
{% set min_interval = 0 %}
{%- if obj."min-interval" %}
{% set min_interval = obj."min-interval" %}
{%- endif%}
{% set max_count = 0 %}
{%- if obj."max-count" %}
{% set max_count = obj."max-count" %}
{%- endif%}
{{gen_metadata(-8, obj)}}
CALL SP__insert_sbr_actual_definition({{obj.name | sql_name}}_oid, {{obj.description | replace('\n', '')}}, {{obj.condition}}, {{obj.action}},{{min_interval}}, {{max_count}}, {{obj.name | sql_name}}_aid);
{%- endfor %}
{%- endif %}
{%- if adm.tbr %}
{%- for obj in adm.tbr %}
{% set period = 0 %}
{%- if obj.period %}
{% set period = obj.period %}
{%- endif%}
{% set max_count = 0 %}
{%- if obj."max-count" %}
{% set max_count = obj."max-count" %}
{%- endif%}
{% set start = 0 %}
{%- if obj.start %}
{% set start = obj.start %}
{%- endif%}
{{gen_metadata(-10, obj)}}
CALL SP__insert_tbr_actual_definition({{obj.name | sql_name}}_oid, {{obj.description | replace('\n', '')}}, {{period}}, {{max_count}},{{start}}, {{obj.action}}, {{obj.name | sql_name}}_aid);
{%- endfor %}
{%- endif %}
#}

{%- if adm.var %}

-- var
{%- for obj in adm.var %}
{{gen_metadata(-11, obj)}}
{%- set init_value = " " %}
{%- if obj.init_value is defined %}
{%- set init_value = obj.init_value %}
{%-endif %}
{%- set type = "NULL" %}
{%- if obj.init_ari is defined %}
{{obj.init_ari}}
{%- if obj.init_ari.typeobj is defined %}
{%- set type =  obj.init_ari.typeobj %}
{%-endif %}
{%-endif %}

{%- set expr = "expr to do" %}
{#TODO {%- if obj.init-expr 	is defined %}
# {%- set expr = obj.init-expr %}
# {%-endif %}
#}
{%- if obj.parameters.items %}
{{ gen_params(obj) }}
CALL SP__insert_variable_formal_definition({{obj.name | sql_name}}_oid, '{{obj.description | replace('\n', ' ')}}', fp_spec_id, '{{type}}', '{{expr}}', '{{init_value}}',{{obj.name | sql_name}}_fid);
{%- else %}
CALL SP__insert_variable_formal_definition({{obj.name | sql_name}}_oid, '{{obj.description | replace('\n', ' ')}}', {{null_string}}, '{{type}}', '{{expr}}', '{{init_value}}', {{obj.name | sql_name}}_fid);
CALL SP__insert_variable_actual_definition({{obj.name | sql_name}}_oid, 'The singleton value for {{obj.name | sql_name}}', {{null_string}}, {{obj.name | sql_name}}_aid);
{%- endif %}
{%- endfor %}
{%- endif %}
end
$do$



