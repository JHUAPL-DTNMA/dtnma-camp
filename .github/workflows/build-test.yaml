name: Build and run tests
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Prep
        run: pip3 install build
      - name: Build
        run: python3 -m build

  unit-test:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install
        run: |
          pip3 install git+https://github.com/NASA-AMMOS/anms-ace.git
          pip3 install -e '.[test]'
      - name: Test
        run: python3 -m pytest -v --cov=camp tests/unit_test

  test-integration-sql:
    needs: [build]
    container-job:
      runs-on: ubuntu-latest
      container: node:10.18-jessie
      strategy:
        max-parallel: 4
        matrix:
          python-version: ["3.10"]
      services:
        postgres:
          image: postgres
          env:
            POSTGRES_PASSWORD: postgres
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            - 5432:5432
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
          with:
            submodules: recursive
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install
          run: |
            pip3 install git+https://github.com/NASA-AMMOS/anms-ace.git
            pip3 install -e '.[test]'
            git clone https://github.com/JHUAPL-DTNMA/dtnma-adms.git tests/integration_test/anms-adms
            git clone https://github.com/NASA-AMMOS/anms.git tests/integration_test/anms
        - name: Prep docker
          run: |
            docker build -t amp-sql:1.0 tests/integration_test/anms/amp-sql/ 
            docker run --name anms-lib -e POSTGRES_PASSWORD=root -d amp-sql:1.0
            sleep 15 # make sure docker container is up
            docker container ps -a
            echo "PGSQL_HOST=$(docker exec anms-lib hostname -i)" >> $GITHUB_ENV
        - name: Test
          run: python3 -m pytest -v --cov=camp tests/integration_test/test_sql_integration.py
          env:
            PGSQL_USERNAME: postgres
            PGSQL_PASSWORD: root        
        - name: Stop
          if: always()
          run: |
            docker stop anms-lib
            docker rm anms-lib

  test-integration-c:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install
        run: |
          pip3 install git+https://github.com/NASA-AMMOS/anms-ace.git
          pip3 install -e '.[test]'
          git clone https://github.com/JHUAPL-DTNMA/dtnma-adms.git tests/integration_test/anms-adms
      - name: Prep DTNMA tools
        run: |
          git clone https://github.com/JHUAPL-DTNMA/dtnma-tools.git tests/integration_test/dtnma-tools
          sudo apt-get update
          sudo apt-get install -y rsync cmake ninja-build ruby build-essential autoconf libtool libssl-dev libcjson-dev
          cd tests/integration_test/dtnma-tools
          git submodule update --init --recursive
          ./prep.sh
          ./build.sh check
          cd ../../..
      - name: Test
        run: python3 -m pytest -v --cov=camp tests/integration_test/test_c_integration.py

  flake8:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install
        run: |
          pip3 install git+https://github.com/NASA-AMMOS/anms-ace.git
          pip3 install -e '.[flake8]'
      - name: Run flake8
        run: |
          FAIL_SRC=0
          flake8 src || FAIL_SRC=$?

  release:
    needs: [unit-test, flake8]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: release
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Prep
        run: pip3 install build
      - name: Build
        run: python3 -m build
      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
